<?xml version="1.0"?>
  <database name="FUNCTION FET_COPIARRS">
    <function name="FET_COPIARRS" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_client_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Record_ID VARCHAR2(32);
  v_Result NUMBER:=1; -- Success
  v_totalqty NUMBER:=0; 
  -- Parameter
  TYPE RECORD IS REF CURSOR;
  Cur_Parameter RECORD;
  Cur_BP RECORD;
    
BEGIN
  IF (p_PInstance_ID IS NOT NULL) THEN
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        i.AD_User_ID,
        p.ParameterName,
        p.P_String,
        p.P_Number,
        p.P_Date
      FROM AD_PINSTANCE i
      LEFT JOIN AD_PINSTANCE_PARA p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=p_PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
    END LOOP; -- Get Parameter
    DBMS_OUTPUT.PUT_LINE('  v_Record_ID=' || v_Record_ID) ;
  ELSE
    DBMS_OUTPUT.PUT_LINE('--<<fet_copiarRS>>') ;
    v_Record_ID:=p_client_id;
  END IF;
BEGIN --BODY

-- CODE GOES HERE
   FOR Cur_BP IN(
	SELECT c_bpartner_id,name,EM_Fet_Razonsocial FROM c_bpartner WHERE ad_client_id = v_Record_ID
   )
   LOOP
	IF (COALESCE(Cur_BP.EM_Fet_Razonsocial,'NADA') = 'NADA') THEN
		UPDATE c_bpartner SET EM_Fet_Razonsocial = Cur_BP.name WHERE c_bpartner_id=Cur_BP.c_bpartner_id AND ad_client_id = v_Record_ID;
	END IF;
   END LOOP;

END; --BODY
EXCEPTION
WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
     v_ResultStr:= '@ERROR=' || SQLERRM;
      DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
      IF (p_PInstance_ID IS NOT NULL) THEN
        ROLLBACK;
        AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
      ELSE
        RAISE;
      END IF;
END FET_COPIARRS
]]></body>
    </function>
  </database>
